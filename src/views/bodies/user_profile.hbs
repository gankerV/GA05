{{#if isSuccess}}
<div id="notification"
    class="fixed top-28 right-28 bg-success text-white py-4 rounded shadow-lg p-10 transition-opacity opacity-100 duration-1000 z-50">
    <p>Information updated successfully!</p>
</div>
{{/if}}

<section id="profile-page" class="bg-white py-16">
    <div class="flex flex-col justify-center items-center">
        <div class="relative flex flex-col items-center rounded-[20px] mx-auto bg-white bg-clip-border shadow-lg">
            <div class="flex flex-col sm:flex-row w-full justify-between items-center px-4">
                <p></p>
                <div class="flex items-center">
                    <!-- Ảnh đại diện -->
                    <img id="user-avatar" class="w-14 h-14 rounded-full cursor-pointer"
                        src="/public/images/user_images/{{userInfo.userID}}.jpg" alt="Avatar">
                    <p class="ml-3 text-lg font-medium">{{user.dataValues.email}}</p>
                </div>

                <!-- Avatar Modal -->
                <div id="avatar-modal"
                    class="fixed inset-0 flex items-center justify-center bg-black bg-opacity-50 hidden">
                    <div class="bg-white p-6 rounded-lg shadow-lg max-w-sm w-full">
                        <h2 class="text-xl font-semibold mb-4">Edit Avatar</h2>
                        <img id="preview-avatar" class="w-64 h-64 rounded-full mx-auto mb-4"
                            src="/public/images/user_images/{{userInfo.userID}}.jpg" alt="Preview Avatar">
                        <input type="file" id="upload-avatar"
                            class="block w-full text-sm text-gray-900 border border-gray-300 cursor-pointer focus:outline-none">
                        <div class="flex justify-end mt-4">
                            <button id="cancel-button"
                                class="px-4 py-2 text-gray-600 bg-gray-200 rounded hover:bg-gray-300 mr-2">Cancel</button>
                            <button id="save-button"
                                class="px-4 py-2 text-white bg-blue-600 rounded hover:bg-blue-700">Save</button>
                        </div>
                    </div>
                </div>

                <img onclick="openUpdateModal()" src="/public/images/pencil-icon.svg" alt=""
                    class="h-8 w-8 border rounded-full p-1 cursor-pointer group-hover:scale-120">
                <div id="updateModal"
                    class="fixed inset-0 flex items-center justify-center bg-gray-800 bg-opacity-50 z-50 hidden">
                    <div class="bg-white rounded-lg shadow-lg w-96 p-6">
                        <h3 class="text-xl font-semibold mb-2 text-center">Update Information</h3>
                        <form id="update-form" method="post" action="/user/profile">
                            <input type="hidden" id="input_userID" name="userID" value="{{userInfo.userID}}" />

                            <div class="mb-4">
                                <label class="block text-sm font-medium">Full Name</label>
                                <input type="text" id="input_fullname" name="fullname" class="w-full p-2 border rounded"
                                    required />
                                <span id="fullname-error" class="text-red-500 text-sm"></span>
                            </div>

                            <div class=" mb-4">
                                <label class="block text-sm font-medium">Phone</label>
                                <input type="text" id="input_phone" name="phone" class="w-full p-2 border rounded"
                                    required />
                                <span id="phone-error" class="text-red-500 text-sm"></span>
                            </div>

                            <label class="block text-sm font-medium">Gender</label>
                            <select name="gender" id="input_gender" class="w-full p-2 mb-4 border rounded">
                                <option value="Male">Male</option>
                                <option value="Female">Female</option>
                                <option value="Other">Other</option>
                            </select>

                            <label class="block text-sm font-medium">Day of Birth</label>
                            <div class="flex gap-2 mb-4">
                                <!-- Select for Day -->
                                <select id="input_dob_day" name="dob-day" class="w-1/3 p-2 border rounded" required>
                                </select>

                                <!-- Select for Month -->
                                <select id="input_dob_month" name="dob-month" class="w-1/3 p-2 border rounded" required>
                                </select>

                                <!-- Select for Year -->
                                <select id="input_dob_year" name="dob-year" class="w-1/3 p-2 border rounded" required>
                                </select>
                            </div>

                            <label class="block text-sm font-medium">Address</label>
                            <input type="text" id="input_address" name="address"
                                class="w-full p-2 mb-4 border rounded" />

                            {{!-- Nút submit --}}
                            <div class="flex justify-center"><button type="submit"
                                    class="bg-blue-500 text-white px-4 py-2 rounded">Submit</button>
                                <button type="button" onclick="closeUpdateModal()"
                                    class="ml-2 bg-gray-500 text-white px-4 py-2 rounded">Cancel</button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
            <!-- Grid Layout for User Information -->
            <div class="p-4">
                <div class="grid grid-cols-1 sm:grid-cols-2 gap-4 w-full border-t-2 pt-6">
                    <!-- Name -->
                    <div
                        class="flex flex-col items-start justify-center rounded-2xl bg-white px-3 py-4 shadow-md min-w-52">
                        <p class="text-sm text-gray-light">Name</p>
                        <p id="fullname" class="text-base font-medium text-gray-dark">{{userInfo.fullname}}</p>
                    </div>
                    <!-- Phone -->
                    <div class="flex flex-col items-start justify-center rounded-2xl bg-white px-3 py-4 shadow-md">
                        <p class="text-sm text-gray-light">Phone</p>
                        <p id="phone" class="text-base font-medium text-gray-dark">{{userInfo.phone}}</p>
                    </div>
                    <!-- Gender -->
                    <div class="flex flex-col items-start justify-center rounded-2xl bg-white px-3 py-4 shadow-md">
                        <p class="text-sm text-gray-light">Gender</p>
                        <p id="gender" class="text-base font-medium text-gray-dark">{{userInfo.gender}}</p>
                    </div>
                    <!-- Day of Birth -->
                    <div class="flex flex-col items-start justify-center rounded-2xl bg-white px-3 py-4 shadow-md">
                        <p class="dob" class="text-sm text-gray-light">Day of Birth</p>
                        <p id="dob" class="text-base font-medium text-gray-dark">{{userInfo.dob}}</p>
                    </div>
                    <!-- Address -->
                    <div
                        class="flex flex-col col-span-1 sm:col-span-2 items-center justify-center rounded-2xl bg-white px-3 py-4 shadow-md">
                        <p class="address" class="text-sm text-gray-light">Address</p>
                        <p id="address" class="text-base font-medium text-gray-dark">{{userInfo.address}}</p>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

<script>
    // input gender
    document.getElementById("input_gender").value = document.getElementById("gender").innerText;

    // input dob
    const [year, month, day] = document.getElementById("dob").innerText.split("-");

    const daySelect = document.getElementById("input_dob_day");
    populateSelect(daySelect, 1, 31); // Ngày từ 1 đến 31

    const monthSelect = document.getElementById("input_dob_month");
    populateSelect(monthSelect, 1, 12); // Tháng từ 1 đến 12

    const yearSelect = document.getElementById("input_dob_year");
    const currentYear = new Date().getFullYear();
    populateSelect(yearSelect, 1900, currentYear); // Năm từ 1900 đến hiện tại

    daySelect.value = parseInt(day);
    monthSelect.value = parseInt(month);
    yearSelect.value = parseInt(year);

    function populateSelect(selectElement, start, end) {
        for (let i = start; i <= end; i++) {
            const option = document.createElement("option");
            option.value = i;
            option.textContent = i;
            selectElement.appendChild(option);
        }
    }
    function openUpdateModal() {
        document.getElementById("input_fullname").value = document.getElementById("fullname").innerText;
        document.getElementById("input_phone").value = document.getElementById("phone").innerText;
        document.getElementById("input_address").value = document.getElementById("address").innerText;

        document.getElementById("updateModal").classList.remove("hidden");
    }
    function closeUpdateModal() {
        document.getElementById("updateModal").classList.add("hidden");
    }

    const fullnameField = document.getElementById("input_fullname");
    const phoneField = document.getElementById("input_phone");

    const fullnameError = document.getElementById("fullname-error");
    const phoneError = document.getElementById("phone-error");

    fullnameField.addEventListener("blur", () => {
        const fullname = fullnameField.value.trim();
        fullnameError.textContent = "";
        if (!(/^[A-ZÀÁẠẢÃÂẦẤẬẨẪĂẰẮẶẲẴÈÉẸẺẼÊỀẾỆỂỄÌÍỊỈĨÒÓỌỎÕÔỒỐỘỔỖƠỜỚỢỞỠÙÚỤỦŨƯỪỨỰỬỮỲÝỴỶỸĐ][a-zàáạảãâầấậẩẫăằắặẳẵèéẹẻẽêềếệểễìíịỉĩòóọỏõôồốộổỗơờớợởỡùúụủũưừứựửữỳýỵỷỹđ]*(?:[ ][A-ZÀÁẠẢÃÂẦẤẬẨẪĂẰẮẶẲẴÈÉẸẺẼÊỀẾỆỂỄÌÍỊỈĨÒÓỌỎÕÔỒỐỘỔỖƠỜỚỢỞỠÙÚỤỦŨƯỪỨỰỬỮỲÝỴỶỸĐ][a-zàáạảãâầấậẩẫăằắặẳẵèéẹẻẽêềếệểễìíịỉĩòóọỏõôồốộổỗơờớợởỡùúụủũưừứựửữỳýỵỷỹđ]*)*$/.test(fullname))) {
            fullnameError.textContent = "Please enter a valid name";
        }
    });
    phoneField.addEventListener("blur", () => {
        const phone = phoneField.value.trim();
        phoneError.textContent = "";
        if (!(/^(?:\+84|0)[3-9][0-9]{8}$/.test(phone))) {
            phoneError.textContent = "Please enter a valid phone number";
        }
    });
    document.getElementById("update-form").addEventListener("submit", (event) => {
        const fullname = fullnameField.value.trim();
        const phone = phoneField.value.trim();
        var canSubmit = true;
        fullnameError.textContent = "";
        phoneError.textContent = "";
        if (!(/^[A-ZÀÁẠẢÃÂẦẤẬẨẪĂẰẮẶẲẴÈÉẸẺẼÊỀẾỆỂỄÌÍỊỈĨÒÓỌỎÕÔỒỐỘỔỖƠỜỚỢỞỠÙÚỤỦŨƯỪỨỰỬỮỲÝỴỶỸĐ][a-zàáạảãâầấậẩẫăằắặẳẵèéẹẻẽêềếệểễìíịỉĩòóọỏõôồốộổỗơờớợởỡùúụủũưừứựửữỳýỵỷỹđ]*(?:[ ][A-ZÀÁẠẢÃÂẦẤẬẨẪĂẰẮẶẲẴÈÉẸẺẼÊỀẾỆỂỄÌÍỊỈĨÒÓỌỎÕÔỒỐỘỔỖƠỜỚỢỞỠÙÚỤỦŨƯỪỨỰỬỮỲÝỴỶỸĐ][a-zàáạảãâầấậẩẫăằắặẳẵèéẹẻẽêềếệểễìíịỉĩòóọỏõôồốộổỗơờớợởỡùúụủũưừứựửữỳýỵỷỹđ]*)*$/.test(fullname))) {
            fullnameError.textContent = "Please enter a valid name";
            canSubmit = false;
        }
        if (!(/^(?:\+84|0)[3-9][0-9]{8}$/.test(phone))) {
            phoneError.textContent = "Please enter a valid phone number";
            canSubmit = false;
        }
        if (!canSubmit) {
            event.preventDefault();
        }
    });

    // Xem và sử avatar
    document.addEventListener('DOMContentLoaded', () => {
        const avatarImg = document.getElementById('user-avatar');
        const modal = document.getElementById('avatar-modal');
        const uploadInput = document.getElementById('upload-avatar');
        const previewAvatar = document.getElementById('preview-avatar');
        const cancelButton = document.getElementById('cancel-button');
        const saveButton = document.getElementById('save-button');
        const userID = document.getElementById("input_userID").value;

        // Hiển thị modal khi bấm vào ảnh
        avatarImg.addEventListener('click', () => {
            modal.classList.remove('hidden');
        });

        // Xử lý chọn ảnh
        uploadInput.addEventListener('change', (event) => {
            const file = event.target.files[0];
            if (file) {
                const reader = new FileReader();
                reader.onload = (e) => {
                    previewAvatar.src = e.target.result; // Hiển thị ảnh được chọn
                };
                reader.readAsDataURL(file);
            }
        });

        // Đóng modal
        cancelButton.addEventListener('click', () => {
            modal.classList.add('hidden');
        });

        saveButton.addEventListener('click', async () => {
            const file = uploadInput.files[0];
            if (!file) {
                alert("Please select an image.");
                return;
            }

            const formData = new FormData();
            formData.append('avatar', file);

            try {
                const response = await fetch(`/user/profile/api/update-avatar?userID=${userID}`, {
                    method: 'POST',
                    body: formData,
                });

                const result = await response.json();
                if (result.success) {
                    avatarImg.src = `${result.imageUrl}?timestamp=${Date.now()}`;
                    const userAvatar = document.getElementById("header-user-avatar");
                    userAvatar.src = avatarImg.src;
                } else {
                    alert('Failed to save avatar.');
                }
            } catch (error) {
                console.error('Error:', error);
            }
            modal.classList.add('hidden');
        });
    });
</script>